server:
  port: 8080

spring:
  application:
    name: resource-service
  datasource:
    url: ${RESOURCE_DB_URL:jdbc:postgresql://localhost:5433/resource_service_db}
    username: ${RESOURCE_DB_USERNAME:postgres}
    password: ${RESOURCE_DB_PASSWORD:postgres}
  jpa:
    show-sql: true
    properties:
      hibernate:
        format-sql: true
  #  cloud:
  #    aws:
  #      credentials:
  #        access-key: STUB
  #        secret-key: STUB
  #      endpoint: http://localhost:4566
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}
  instance:
    preferIpAddress: false

song-service:
  name: song-service
  url: ${SONG_SERVICE_URL:http://localhost:8081}

localstack:
  enabled: true

aws:
  region: ${AWS_REGION:us-west-2}
  s3:
    resource-bucket: ${RESOURCE_BUCKET:resource-bucket}
  host: ${AWS_HOST:http://localhost:4566}
  accessKey: ${AWS_ACCESS_KEY:test}
  secretKey: ${AWS_SECRET_KEY:test}

messaging:
  rabbitmq:
    resourceCreatedQueueName: ${RESOURCE_CREATED_QUEUE_NAME:resource.created.local}
    resourceDeletedQueueName: ${RESOURCE_DELETED_QUEUE_NAME:resource.deleted.local}
    resourceExchange: ${RESOURCE_EXCHANGE_NAME:resource}
    resourceCreatedRoutingKey: resource.created
    resourceDeletedRoutingKey: resource.deleted

management:
  endpoints:
    web:
      exposure:
        include: "health"
  endpoint:
    health:
      show-details: "always"

logging:
  level:
    org:
      springframework:
        amqp: DEBUG