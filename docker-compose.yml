version: '3.8'

services:
  song-service-db:
    image: postgres:latest
    container_name: song-service-db
    environment:
      POSTGRES_USER: ${SONG_DB_USERNAME}
      POSTGRES_PASSWORD: ${SONG_DB_PASSWORD}
      POSTGRES_DB: song_service_db
    ports:
      - "5432:5432"
    volumes:
      - ./song-service/src/main/resources/db-init-scripts:/docker-entrypoint-initdb.d/
      - song-service-db-data:/var/lib/postgresql/data

  resource-service-db:
    image: postgres:latest
    container_name: resource-service-db
    environment:
      POSTGRES_USER: ${RESOURCE_DB_USERNAME}
      POSTGRES_PASSWORD: ${RESOURCE_DB_PASSWORD}
      POSTGRES_DB: resource_service_db
    ports:
      - "5433:5432"
    volumes:
      - ./db-init-scripts/resource-db:/docker-entrypoint-initdb.d/
      - resource-service-db-data:/var/lib/postgresql/data

  resource-service:
    build:
      context: .
      dockerfile: ./resource-service/Dockerfile
    container_name: resource-service
    ports:
      - "${RESOURCE_SERVICE_PORT}:8080"
      - "${RESOURCE_SERVICE_DEBUG_PORT}:5005"
    environment:
      RESOURCE_DB_URL: ${RESOURCE_DB_URL}
      RESOURCE_DB_USERNAME: ${RESOURCE_DB_USERNAME}
      RESOURCE_DB_PASSWORD: ${RESOURCE_DB_PASSWORD}
      SONG_SERVICE_URL: http://song-service:8080
      AWS_REGION: us-west-2
      DISCOVERY_SERVICE_URL: http://discovery-service:${DISCOVERY_SERVICE_PORT}/eureka
      RESOURCE_CREATED_QUEUE_NAME: ${RESOURCE_CREATED_QUEUE_NAME}
      RESOURCE_EXCHANGE_NAME: ${RESOURCE_EXCHANGE_NAME}
      SERVER_PORT: ${RESOURCE_SERVICE_SERVER_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RESOURCE_BUCKET: resource-bucket
      AWS_HOST: ${AWS_HOST}
    depends_on:
      - resource-service-db
      - rabbitmq
      - discovery-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  song-service:
    build:
      context: .
      dockerfile: ./song-service/Dockerfile
    #    deploy:
    #      replicas: 2
    container_name: song-service
    ports:
      - '${SONG_SERVICE_PORT}:8080'
      - "${SONG_SERVICE_DEBUG_PORT}:5005"
    environment:
      SONG_DB_URL: ${SONG_DB_URL}
      SONG_DB_USERNAME: ${SONG_DB_USERNAME}
      SONG_DB_PASSWORD: ${SONG_DB_PASSWORD}
      DISCOVERY_SERVICE_URL: http://discovery-service:${DISCOVERY_SERVICE_PORT}/eureka
      SERVER_PORT: ${SONG_SERVICE_SERVER_PORT}
    depends_on:
      - song-service-db
      - discovery-service

  resource-processor:
    build:
      context: .
      dockerfile: ./resource-processor/Dockerfile
    container_name: resource-processor
    ports:
      - '${RESOURCE_PROCESSOR_PORT}:8080'
    environment:
      DISCOVERY_SERVICE_URL: http://discovery-service:${DISCOVERY_SERVICE_PORT}/eureka
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RESOURCE_CREATED_QUEUE_NAME: ${RESOURCE_CREATED_QUEUE_NAME}
      RESOURCE_DELETED_QUEUE_NAME: ${RESOURCE_DELETED_QUEUE_NAME}
      RESOURCE_EXCHANGE_NAME: ${RESOURCE_EXCHANGE_NAME}
      SONG_SERVICE_URL: http://song-service:${SONG_SERVICE_SERVER_PORT}
      RESOURCE_SERVICE_URL: http://resource-service:${RESOURCE_SERVICE_SERVER_PORT}
      SERVER_PORT: 8080
    depends_on:
      - discovery-service
      - resource-service
      - rabbitmq


  discovery-service:
    build:
      context: .
      dockerfile: ./discovery-service/Dockerfile
    container_name: discovery-service
    ports:
      - "${DISCOVERY_SERVICE_PORT}:8761"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - resource-service-db

  localstack:
    container_name: "localstack"
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - ./localstack-init/init-s3.sh:/etc/localstack/init/ready.d/s3.sh

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

volumes:
  song-service-db-data:
    driver: local
  resource-service-db-data:
    driver: local